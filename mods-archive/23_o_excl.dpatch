#! /bin/sh -e
## 20_open_excl.dpatch by  <mpitt@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: No description.

if [ $# -lt 1 ]; then
    echo "`basename $0`: script expects -patch|-unpatch as argument" >&2
    exit 1
fi

[ -f debian/patches/00patch-opts ] && . debian/patches/00patch-opts
patch_opts="${patch_opts:--f --no-backup-if-mismatch} ${2:+-d $2}"

case "$1" in
    -patch) patch -p1 ${patch_opts} < $0;;
    -unpatch) patch -R -p1 ${patch_opts} < $0;;
    *)
        echo "`basename $0`: script expects -patch|-unpatch as argument" >&2
        exit 1;;
esac

exit 0

@DPATCH@
diff -urNad /home/martin/devel/cdr/cdrtools-2.0+a30.pre1/libscg/scsi-linux-ata.c cdrtools-2.0+a30.pre1/libscg/scsi-linux-ata.c
--- /home/martin/devel/cdr/cdrtools-2.0+a30.pre1/libscg/scsi-linux-ata.c	2004-10-19 13:19:33.943939128 +0200
+++ cdrtools-2.0+a30.pre1/libscg/scsi-linux-ata.c	2004-10-19 13:22:09.099351920 +0200
@@ -267,7 +267,7 @@
 			starget,
 			slun;
 
-		f = open(device, O_RDONLY | O_NONBLOCK);
+		f = sg_open_excl(device, O_RDONLY | O_NONBLOCK);
 
 		if (f < 0) {
 			if (scgp->errstr)
diff -urNad /home/martin/devel/cdr/cdrtools-2.0+a30.pre1/libscg/scsi-linux-pg.c cdrtools-2.0+a30.pre1/libscg/scsi-linux-pg.c
--- /home/martin/devel/cdr/cdrtools-2.0+a30.pre1/libscg/scsi-linux-pg.c	2004-10-19 13:19:33.945938824 +0200
+++ cdrtools-2.0+a30.pre1/libscg/scsi-linux-pg.c	2004-10-19 13:20:44.774171296 +0200
@@ -207,7 +207,7 @@
 			return (0);
 #endif
 		js_snprintf(devname, sizeof (devname), "/dev/pg%d", tgt);
-		f = open(devname, O_RDWR | O_NONBLOCK);
+		f = sg_open_excl(devname, O_RDWR | O_NONBLOCK);
 		if (f < 0) {
 			if (scgp->errstr)
 				js_snprintf(scgp->errstr, SCSI_ERRSTR_SIZE,
@@ -220,7 +220,7 @@
 		tlun = 0;
 		for (tgt = 0; tgt < MAX_TGT; tgt++) {
 			js_snprintf(devname, sizeof (devname), "/dev/pg%d", tgt);
-			f = open(devname, O_RDWR | O_NONBLOCK);
+			f = sg_open_excl(devname, O_RDWR | O_NONBLOCK);
 			if (f < 0) {
 				/*
 				 * Set up error string but let us clear it later
diff -urNad /home/martin/devel/cdr/cdrtools-2.0+a30.pre1/libscg/scsi-linux-sg.c cdrtools-2.0+a30.pre1/libscg/scsi-linux-sg.c
--- /home/martin/devel/cdr/cdrtools-2.0+a30.pre1/libscg/scsi-linux-sg.c	2004-10-19 13:20:42.774475296 +0200
+++ cdrtools-2.0+a30.pre1/libscg/scsi-linux-sg.c	2004-10-19 13:20:44.777170840 +0200
@@ -217,6 +217,28 @@
 #endif
 LOCAL	void	sg_settimeout	__PR((int f, int timeout));
 
+int    sg_open_excl    __PR((char *device, int mode));
+
+int
+sg_open_excl(device, mode)
+       char    *device;
+       int     mode;
+{
+       int f;
+       int i;
+               f = open(device, mode|O_EXCL);
+       for (i = 0; (i < 10) && (f == -1 && (errno == EACCES || errno == EBUSY)); i++) {
+           fprintf(stderr, "Error trying to open %s exclusively (%s)... retrying in 1 second.\n", device, strerror(errno));
+           usleep(1000000 + 100000.0 * rand()/(RAND_MAX+1.0));
+           f = open(device, mode|O_EXCL);
+       }
+       if (f == -1 && errno != EACCES && errno != EBUSY) {
+           f = open(device, mode);
+       }
+       return f;
+}
+
+
 /*
  * Return version information for the low level SCSI transport code.
  * This has been introduced to make it easier to trace down problems
@@ -375,7 +397,7 @@
 	if (use_ata) for (i=2*busno+tgt >= 0 ? 2*busno+tgt:0; i <= 25; i++) {
 		js_snprintf(devname, sizeof (devname), "/dev/hd%c", i+'a');
 					/* O_NONBLOCK is dangerous */
-		f = open(devname, O_RDWR | O_NONBLOCK);
+		f = sg_open_excl(devname, O_RDWR | O_NONBLOCK);
 		if (f < 0) {
 			/*
 			 * Set up error string but let us clear it later
@@ -415,7 +437,7 @@
 	if (nopen == 0) for (i = 0; i < 32; i++) {
 		js_snprintf(devname, sizeof (devname), "/dev/sg%d", i);
 					/* O_NONBLOCK is dangerous */
-		f = open(devname, O_RDWR | O_NONBLOCK);
+		f = sg_open_excl(devname, O_RDWR | O_NONBLOCK);
 		if (f < 0) {
 			/*
 			 * Set up error string but let us clear it later
@@ -444,7 +466,7 @@
 	if (nopen == 0) for (i = 0; i <= 25; i++) {
 		js_snprintf(devname, sizeof (devname), "/dev/sg%c", i+'a');
 					/* O_NONBLOCK is dangerous */
-		f = open(devname, O_RDWR | O_NONBLOCK);
+		f = sg_open_excl(devname, O_RDWR | O_NONBLOCK);
 		if (f < 0) {
 			/*
 			 * Set up error string but let us clear it later
@@ -483,7 +505,7 @@
 			"Warning: Open by 'devname' is unintentional and not supported.\n");
 		}
 					/* O_NONBLOCK is dangerous */
-		f = open(device, O_RDWR | O_NONBLOCK);
+		f = sg_open_excl(device, O_RDWR | O_NONBLOCK);
 /*		if (f < 0 && errno == ENOENT)*/
 /*			goto openpg;*/
 
diff -urNad /home/martin/devel/cdr/cdrtools-2.0+a30.pre1/libscg/scsitransp.c cdrtools-2.0+a30.pre1/libscg/scsitransp.c
--- /home/martin/devel/cdr/cdrtools-2.0+a30.pre1/libscg/scsitransp.c	2004-10-19 13:19:33.951937912 +0200
+++ cdrtools-2.0+a30.pre1/libscg/scsitransp.c	2004-10-19 13:20:44.779170536 +0200
@@ -52,8 +52,8 @@
  *	Choose your name instead of "schily" and make clear that the version
  *	string is related to a modified source.
  */
-LOCAL	char	_scg_version[]		= "0.8";	/* The global libscg version	*/
-LOCAL	char	_scg_auth_schily[]	= "schily";	/* The author for this module	*/
+LOCAL	char	_scg_version[]		= "0.8ubuntu1";	/* The global libscg version	*/
+LOCAL	char	_scg_auth_ubuntu[]	= "ubuntu";	/* The author for this module	*/
 
 #define	DEFTIMEOUT	20	/* Default timeout for SCSI command transport */
 
@@ -137,7 +137,7 @@
 		 * return "schily" for the SCG_AUTHOR request.
 		 */
 		case SCG_AUTHOR:
-			return (_scg_auth_schily);
+			return (_scg_auth_ubuntu);
 		case SCG_SCCS_ID:
 			return (sccsid);
 		default:
