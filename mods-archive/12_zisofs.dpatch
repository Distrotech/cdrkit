#! /bin/sh -e
## 12_zisofs.dpatch by Andreas Krueger <<andreas.krueger@dv-ratio.com>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: --sloppy option of mkzftree is not parsed and buggy
## DP: See http://bugs.debian.org/#188212

if [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi

[ -f debian/patches/00patch-opts ] && . debian/patches/00patch-opts
patch_opts="${patch_opts:--f --no-backup-if-mismatch}"

case "$1" in
       -patch) patch $patch_opts -p1 < $0;;
       -unpatch) patch $patch_opts -p1 -R < $0;;
        *)
                echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
                exit 1;;
esac

exit 0

@DPATCH@
diff -urNad /tmp/cdrt/cdrtools-2.0+a10/zisofs_tools/mkzftree.c cdrtools-2.0+a10/zisofs_tools/mkzftree.c
--- /tmp/cdrt/cdrtools-2.0+a10/zisofs_tools/mkzftree.c	2003-04-14 13:45:27.000000000 +0200
+++ cdrtools-2.0+a10/zisofs_tools/mkzftree.c	2003-04-14 13:47:59.000000000 +0200
@@ -94,7 +94,7 @@
 const char *program;
 
 /* Long options */
-#define OPTSTRING "fz:up:xXC:lLFvqV:hw"
+#define OPTSTRING "fz:up:xXC:lLFsvqV:hw"
 #ifdef HAVE_GETOPT_LONG
 const struct option long_options[] = {
   { "force",	             0,  0,  'f' },
@@ -106,6 +106,7 @@
   { "crib-tree",             1,  0,  'C' },
   { "local",                 0,  0,  'l' },
   { "strict-local",          0,  0,  'L' },
+  { "sloppy",                0,  0,  's' },
   { "file",                  0,  0,  'F' },
   { "verbose",               0,  0,  'v' },
   { "quiet",                 0,  0,  'q' },
@@ -265,17 +266,17 @@
 
   if ( !opt.file_root ) {
     if ( chown(out, st.st_uid, st.st_gid) && !opt.sloppy ) {
-      message(vl_error, "%s: %s: %s", program, out, strerror(errno));
+      message(vl_error, "%s: %s: %s\n", program, out, strerror(errno));
       err = EX_CANTCREAT;
     }
     if ( chmod(out, st.st_mode) && !opt.sloppy && !err ) {
-      message(vl_error, "%s: %s: %s", program, out, strerror(errno));
+      message(vl_error, "%s: %s: %s\n", program, out, strerror(errno));
       err = EX_CANTCREAT;
     }
     ut.actime  = st.st_atime;
     ut.modtime = st.st_mtime;
     if ( utime(out, &ut) && !opt.sloppy && !err ) {
-      message(vl_error, "%s: %s: %s", program, out, strerror(errno));
+      message(vl_error, "%s: %s: %s\n", program, out, strerror(errno));
       err = EX_CANTCREAT;
     }
   }
diff -urNad /tmp/cdrt/cdrtools-2.0+a10/zisofs_tools/walk.c cdrtools-2.0+a10/zisofs_tools/walk.c
--- /tmp/cdrt/cdrtools-2.0+a10/zisofs_tools/walk.c	2003-04-14 13:45:27.000000000 +0200
+++ cdrtools-2.0+a10/zisofs_tools/walk.c	2003-04-14 13:47:59.000000000 +0200
@@ -291,26 +291,26 @@
   /* This is done by munge_file() for files */
   if ( !S_ISREG(st.st_mode) ) {
 #ifdef HAVE_LCHOWN
-    if ( lchown(out_path, st.st_uid, st.st_gid) && opt.sloppy && !err ) {
-      message(vl_error, "%s: %s: %s", program, out_path, strerror(errno));
+    if ( lchown(out_path, st.st_uid, st.st_gid) && !opt.sloppy && !err ) {
+      message(vl_error, "%s: %s: %s\n", program, out_path, strerror(errno));
       err = EX_CANTCREAT;
     }
 #endif
     if ( !S_ISLNK(st.st_mode) ) {
 #ifndef HAVE_LCHOWN
       if ( chown(out_path, st.st_uid, st.st_gid) && !opt.sloppy && !err ) {
-	message(vl_error, "%s: %s: %s", program, out_path, strerror(errno));
+	message(vl_error, "%s: %s: %s\n", program, out_path, strerror(errno));
 	err = EX_CANTCREAT;
       }
 #endif
       if ( chmod(out_path, st.st_mode) && !opt.sloppy && !err ) {
-	message(vl_error, "%s: %s: %s", program, out_path, strerror(errno));
+	message(vl_error, "%s: %s: %s\n", program, out_path, strerror(errno));
 	err = EX_CANTCREAT;
       }
       ut.actime  = st.st_atime;
       ut.modtime = st.st_mtime;
       if ( utime(out_path, &ut) && !opt.sloppy && !err ) {
-	message(vl_error, "%s: %s: %s", program, out_path, strerror(errno));
+	message(vl_error, "%s: %s: %s\n", program, out_path, strerror(errno));
 	err = EX_CANTCREAT;
       }
     }
